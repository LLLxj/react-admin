{"ast":null,"code":"var _jsxFileName = \"/Users/liuzijian/person/react/my-react-admin/src/layout/Sidebar/Sidebaritem/index.tsx\";\nimport React from 'react';\nimport { Menu } from 'antd';\nimport MenusList from '../../../routes/config';\nimport { Link, HashRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { changeRouteCreater } from '../../../redux/Routes';\nimport { HomeOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\n\nclass SideBarItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleMenuClick = item => {\n      const obj = item.keyPath;\n      this.props.handleChangeRoute(obj);\n    };\n  }\n\n  // render (): JSX.Element {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames('sidebar_wrap', {\n        'sidebarLogoShow': !this.props.sidebarLogoShow\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(HashRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }, MenusList.menus.map((item, index) => /*#__PURE__*/React.createElement(Menu, {\n      defaultSelectedKeys: ['/'],\n      selectedKeys: this.props.routes,\n      onClick: this.handleMenuClick,\n      inlineCollapsed: this.props.collapse,\n      mode: \"inline\",\n      theme: \"dark\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, item.children ? renderSubMenu(item) : renderMenuItem(item))))));\n  }\n\n}\n\nconst renderMenuItem = menuItem => {\n  return /*#__PURE__*/React.createElement(Menu.Item, {\n    key: menuItem.path,\n    icon: /*#__PURE__*/React.createElement(HomeOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 40\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: menuItem.path,\n    replace: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }\n  }, menuItem.title));\n};\n\nconst renderSubMenu = subItem => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Menu.SubMenu, {\n    key: subItem.path,\n    icon: /*#__PURE__*/React.createElement(HomeOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }),\n    title: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"nav-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, subItem.title)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }\n  }, subItem.children.map(sub => {\n    return renderMenuItem(sub);\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    collapse: state.Sidebar.collapse,\n    routes: state.Route.routes,\n    sidebarLogoShow: state.GlobalSetting.sidebarLogoShow\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // 所有处理事件的方法都以handleXXX命名\n    handleChangeRoute: bindActionCreators(changeRouteCreater, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarItem); // export default SideBarItem","map":{"version":3,"sources":["/Users/liuzijian/person/react/my-react-admin/src/layout/Sidebar/Sidebaritem/index.tsx"],"names":["React","Menu","MenusList","Link","HashRouter","connect","bindActionCreators","changeRouteCreater","HomeOutlined","classNames","SideBarItem","Component","constructor","props","handleMenuClick","item","obj","keyPath","handleChangeRoute","render","sidebarLogoShow","menus","map","index","routes","collapse","children","renderSubMenu","renderMenuItem","menuItem","path","title","subItem","sub","mapStateToProps","state","Sidebar","Route","GlobalSetting","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Menu } from 'antd'\nimport MenusList, { IFSubMenu, MenuBase } from '../../../routes/config'\nimport { Link, HashRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { changeRouteCreater } from '../../../redux/Routes'\nimport { HomeOutlined } from '@ant-design/icons'\nimport { ReduxProps } from '../../../redux'\nimport classNames from 'classnames'\n\ninterface Props {\n\tcollapse: boolean,\n\troutes: string[],\n\tsidebarLogoShow: boolean,\n\thandleChangeRoute: (value: string[]) => void\n}\n\ninterface InputItemProps {\n\t[index: string]: any\n}\n\nclass SideBarItem extends React.Component<Props>{\n\n\tconstructor(props: Props) {\n\t\tsuper(props)\n\t}\n\n\thandleMenuClick = (item: InputItemProps) => {\n\t\tconst obj: string[] = item.keyPath\n\t\tthis.props.handleChangeRoute(obj)\n\t}\n\n\t// render (): JSX.Element {\n\trender (): JSX.Element {\n\t\treturn (\n\t\t\t<div className={classNames('sidebar_wrap', { 'sidebarLogoShow': !this.props.sidebarLogoShow })}>\n\t\t\t\t<HashRouter>\n\t\t\t\t\t{MenusList.menus.map((item: IFSubMenu, index: number) => (\n\t\t\t\t\t\t<Menu \n\t\t\t\t\t\t\tdefaultSelectedKeys = {['/']}\n\t\t\t\t\t\t\tselectedKeys = {this.props.routes}\n\t\t\t\t\t\t\tonClick = {this.handleMenuClick}\n\t\t\t\t\t\t\tinlineCollapsed={this.props.collapse}\n\t\t\t\t\t\t\tmode = \"inline\"\n\t\t\t\t\t\t\ttheme = \"dark\" \n\t\t\t\t\t\t\tkey = {index}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{item.children! ? renderSubMenu(item) : renderMenuItem(item)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t</Menu>\n\t\t\t\t\t))}\n\t\t\t\t</HashRouter>\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nconst renderMenuItem = (menuItem: MenuBase) => {\n\treturn (\n\t\t<Menu.Item key={menuItem.path} icon={<HomeOutlined />}>\n\t\t\t<Link to={menuItem.path} replace>\n\t\t\t\t{menuItem.title}\n\t\t\t</Link>\n\t\t</Menu.Item>\n\t)\n}\n\nconst renderSubMenu = (subItem: IFSubMenu) => {\n\treturn (\n\t\t<>\n\t\t\t<Menu.SubMenu\n\t\t\t\tkey={subItem.path}\n\t\t\t\ticon={<HomeOutlined />}\n\t\t\t\ttitle={\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<span className=\"nav-text\">{subItem.title}</span>\n\t\t\t\t\t</span>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{subItem.children!.map((sub: MenuBase) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\trenderMenuItem(sub)\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</Menu.SubMenu>\t\n\t\t</>\n\t)\n}\n\nconst mapStateToProps = (state: ReduxProps) => {\n\treturn {\n\t\tcollapse: state.Sidebar.collapse,\n\t\troutes: state.Route.routes,\n\t\tsidebarLogoShow: state.GlobalSetting.sidebarLogoShow\n\t}\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\t// 所有处理事件的方法都以handleXXX命名\n\t\thandleChangeRoute: bindActionCreators(changeRouteCreater, dispatch)\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarItem)\n// export default SideBarItem\n"]},"metadata":{},"sourceType":"module"}